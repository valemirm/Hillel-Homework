1. Поясніть зміст наступних об'яв змінних.

	• int *pOne; - не визначений вказівник типу int з назвою pOne;

	• int vTwo: - змінна типу int з назвою vTwo;

	• int *pThree = &vTwo; - вказівник типу інт з назвою pThree, що зберігає в собі адресу змінної vTwo;

2. Допустимо, в програмі оголошена змінна yourAge типу unsigned short. Як оголосити вказівник, що дозволяє маніпулювати цією змінною?

    - unsigned short* pAge = &yourAge; - вказівник типу unsigned short з назвою pAge, що зберігає в собі адресу змінної yourAge;

3. За допомогою вказівника присвойте змінній вашого значення 50.

    - *pAge = 50; - розміновуємо вказівник та надаємо йому значення 50, яке записується на адресу за вказівником та міняє таким чином значення змінної yourAge;


5. Жучки: знайдіть помилку у наступному фрагменті програми.

#include <iostream>

using namespace std;

int main()
{
	int *pInt;
	*pInt = 9;
	cout << " The value at pInt: "<< *pInt;

	return 0;
}

- 26 рядок, вказівник не визначено, тобто за ним буде зберігатись невідоме значення; необхідно ініціалізувати через new, наприклад: int *pInt = new int;
 
6. Жучки: знайдіть помилку у наступному фрагменті програми.

#include <iostream>

using namespace std;

int main()
{
	int SomeVariable = 5;
	cout << "SomeVariable: " << SomeVariable << "\n";
	int *pVar = &SomeVariable;
	pVar = 9;
	cout << "SomeVariable: " << *pVar << "\n";
	return 0;
}

- 46 рядок, призводить до зміни адреси, що зберігається у вказівнику, а не значення за цією адресою, тобто втрачається зв'язок вказівника та змінної; правильний запис: *pVar = 9; 
